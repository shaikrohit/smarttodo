package com.example.smarttodo.data

import androidx.room.Entity
import androidx.room.PrimaryKey
import java.io.Serializable
import java.util.Date // Using java.util.Date for date fields.

/**
 * Represents a single task item in the application.
 * This data class is used as a Room entity to define the "tasks" table structure.
 *
 * It implements [Serializable] which allows instances of this class to be passed
 * between components (e.g., via Intents or Bundles). For Android-specific Inter-Process Communication (IPC),
 * [android.os.Parcelable] is generally recommended for better performance, but [Serializable]
 * can be simpler for other use cases like disk serialization or if not frequently passed via IPC.
 *
 * @property id The unique identifier for the task. Auto-generated by Room.
 * @property title The main title or name of the task.
 * @property description A more detailed description of the task. Defaults to an empty string.
 * @property priority The priority level of the task. Defaults to [Priority.LOW].
 * @property isCompleted A boolean flag indicating whether the task has been completed. Defaults to false.
 * @property createdAt The date and time when the task was created. Defaults to the current date/time.
 *                     Note: [java.util.Date] is mutable. For more robust date/time handling,
 *                     consider using immutable classes from `java.time` (e.g., `Instant`)
 *                     with appropriate Room TypeConverters in future enhancements.
 * @property dueDate An optional due date and time for the task. Null if no due date is set.
 *                   Note: [java.util.Date] is mutable. Similar to `createdAt`, consider `java.time`
 *                   (e.g., `LocalDate` or `LocalDateTime`) for future enhancements.
 * @property hasReminder A boolean flag indicating if a reminder is set for this task. Defaults to false.
 * @property taskType The category or type of the task (e.g., ADMINISTRATIVE, PERSONAL).
 *                    Assumes [TaskType] is an enum defined elsewhere in the project. Defaults to [TaskType.ADMINISTRATIVE].
 * @property estimatedPomodoros The estimated number of Pomodoro sessions required to complete the task. Defaults to 0.
 * @property completedPomodoros The number of Pomodoro sessions already completed for this task. Defaults to 0.
 */
@Entity(tableName = "tasks") // Marks this class as a Room database entity for the "tasks" table.
data class Task(
    @PrimaryKey(autoGenerate = true) // Marks 'id' as the primary key, auto-generated by Room.
    val id: Int = 0,
    val title: String,
    val description: String = "",
    val priority: Priority = Priority.LOW,
    val isCompleted: Boolean = false,
    val createdAt: Date = Date(),
    val dueDate: Date? = null,
    val hasReminder: Boolean = false,
    val taskType: TaskType = TaskType.ADMINISTRATIVE, // Assuming TaskType is defined elsewhere
    val estimatedPomodoros: Int = 0,
    val completedPomodoros: Int = 0
) : Serializable // Implements Serializable for passing Task objects.

/**
 * Enum representing the priority levels for a [Task].
 * Each priority has an integer [value] which could be used for sorting or database storage,
 * and a [displayName] suitable for presentation in the UI.
 */
enum class Priority(val value: Int, val displayName: String) {
    /** Low priority task. */
    LOW(1, "Low"),
    /** Medium priority task. */
    MEDIUM(2, "Medium"),
    /** High priority task. */
    HIGH(3, "High")
}

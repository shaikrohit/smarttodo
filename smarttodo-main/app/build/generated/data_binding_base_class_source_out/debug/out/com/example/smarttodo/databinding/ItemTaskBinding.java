// Generated by view binder compiler. Do not edit!
package com.example.smarttodo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smarttodo.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTaskBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonMoreOptions;

  @NonNull
  public final CheckBox checkboxComplete;

  @NonNull
  public final LinearLayout layoutDueDate;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewDueDate;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final View viewPriorityIndicator;

  private ItemTaskBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageButton buttonMoreOptions, @NonNull CheckBox checkboxComplete,
      @NonNull LinearLayout layoutDueDate, @NonNull TextView textViewDescription,
      @NonNull TextView textViewDueDate, @NonNull TextView textViewTitle,
      @NonNull View viewPriorityIndicator) {
    this.rootView = rootView;
    this.buttonMoreOptions = buttonMoreOptions;
    this.checkboxComplete = checkboxComplete;
    this.layoutDueDate = layoutDueDate;
    this.textViewDescription = textViewDescription;
    this.textViewDueDate = textViewDueDate;
    this.textViewTitle = textViewTitle;
    this.viewPriorityIndicator = viewPriorityIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMoreOptions;
      ImageButton buttonMoreOptions = ViewBindings.findChildViewById(rootView, id);
      if (buttonMoreOptions == null) {
        break missingId;
      }

      id = R.id.checkboxComplete;
      CheckBox checkboxComplete = ViewBindings.findChildViewById(rootView, id);
      if (checkboxComplete == null) {
        break missingId;
      }

      id = R.id.layoutDueDate;
      LinearLayout layoutDueDate = ViewBindings.findChildViewById(rootView, id);
      if (layoutDueDate == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      TextView textViewDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewDueDate;
      TextView textViewDueDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDueDate == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.viewPriorityIndicator;
      View viewPriorityIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewPriorityIndicator == null) {
        break missingId;
      }

      return new ItemTaskBinding((MaterialCardView) rootView, buttonMoreOptions, checkboxComplete,
          layoutDueDate, textViewDescription, textViewDueDate, textViewTitle,
          viewPriorityIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

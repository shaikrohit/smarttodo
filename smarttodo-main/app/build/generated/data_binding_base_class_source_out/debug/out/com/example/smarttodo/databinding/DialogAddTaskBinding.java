// Generated by view binder compiler. Do not edit!
package com.example.smarttodo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smarttodo.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddTaskBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final MaterialButton buttonSelectDate;

  @NonNull
  public final MaterialButton buttonSelectTime;

  @NonNull
  public final TextInputEditText editTextDescription;

  @NonNull
  public final TextInputEditText editTextTitle;

  @NonNull
  public final TextInputLayout inputLayoutDescription;

  @NonNull
  public final TextInputLayout inputLayoutTitle;

  @NonNull
  public final RadioGroup radioGroupPriority;

  @NonNull
  public final RadioButton radioHighPriority;

  @NonNull
  public final RadioButton radioLowPriority;

  @NonNull
  public final RadioButton radioMediumPriority;

  @NonNull
  public final SwitchMaterial switchReminder;

  @NonNull
  public final TextView textViewDialogTitle;

  @NonNull
  public final TextView textViewSelectedDateTime;

  private DialogAddTaskBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton buttonCancel,
      @NonNull MaterialButton buttonSave, @NonNull MaterialButton buttonSelectDate,
      @NonNull MaterialButton buttonSelectTime, @NonNull TextInputEditText editTextDescription,
      @NonNull TextInputEditText editTextTitle, @NonNull TextInputLayout inputLayoutDescription,
      @NonNull TextInputLayout inputLayoutTitle, @NonNull RadioGroup radioGroupPriority,
      @NonNull RadioButton radioHighPriority, @NonNull RadioButton radioLowPriority,
      @NonNull RadioButton radioMediumPriority, @NonNull SwitchMaterial switchReminder,
      @NonNull TextView textViewDialogTitle, @NonNull TextView textViewSelectedDateTime) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.buttonSelectDate = buttonSelectDate;
    this.buttonSelectTime = buttonSelectTime;
    this.editTextDescription = editTextDescription;
    this.editTextTitle = editTextTitle;
    this.inputLayoutDescription = inputLayoutDescription;
    this.inputLayoutTitle = inputLayoutTitle;
    this.radioGroupPriority = radioGroupPriority;
    this.radioHighPriority = radioHighPriority;
    this.radioLowPriority = radioLowPriority;
    this.radioMediumPriority = radioMediumPriority;
    this.switchReminder = switchReminder;
    this.textViewDialogTitle = textViewDialogTitle;
    this.textViewSelectedDateTime = textViewSelectedDateTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonSelectDate;
      MaterialButton buttonSelectDate = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectDate == null) {
        break missingId;
      }

      id = R.id.buttonSelectTime;
      MaterialButton buttonSelectTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectTime == null) {
        break missingId;
      }

      id = R.id.editTextDescription;
      TextInputEditText editTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      TextInputEditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.inputLayoutDescription;
      TextInputLayout inputLayoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutDescription == null) {
        break missingId;
      }

      id = R.id.inputLayoutTitle;
      TextInputLayout inputLayoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutTitle == null) {
        break missingId;
      }

      id = R.id.radioGroupPriority;
      RadioGroup radioGroupPriority = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupPriority == null) {
        break missingId;
      }

      id = R.id.radioHighPriority;
      RadioButton radioHighPriority = ViewBindings.findChildViewById(rootView, id);
      if (radioHighPriority == null) {
        break missingId;
      }

      id = R.id.radioLowPriority;
      RadioButton radioLowPriority = ViewBindings.findChildViewById(rootView, id);
      if (radioLowPriority == null) {
        break missingId;
      }

      id = R.id.radioMediumPriority;
      RadioButton radioMediumPriority = ViewBindings.findChildViewById(rootView, id);
      if (radioMediumPriority == null) {
        break missingId;
      }

      id = R.id.switchReminder;
      SwitchMaterial switchReminder = ViewBindings.findChildViewById(rootView, id);
      if (switchReminder == null) {
        break missingId;
      }

      id = R.id.textViewDialogTitle;
      TextView textViewDialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewDialogTitle == null) {
        break missingId;
      }

      id = R.id.textViewSelectedDateTime;
      TextView textViewSelectedDateTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewSelectedDateTime == null) {
        break missingId;
      }

      return new DialogAddTaskBinding((LinearLayout) rootView, buttonCancel, buttonSave,
          buttonSelectDate, buttonSelectTime, editTextDescription, editTextTitle,
          inputLayoutDescription, inputLayoutTitle, radioGroupPriority, radioHighPriority,
          radioLowPriority, radioMediumPriority, switchReminder, textViewDialogTitle,
          textViewSelectedDateTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
